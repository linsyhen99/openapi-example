{
  "openapi": "3.0.3",
  "info": {
    "title": "openapi-sample-repo",
    "description": "This is a sample generated openapi documentation for reference",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/employee": {
      "post": {
        "tags": [
          "crate"
        ],
        "operationId": "create_new_employee_record",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInputParam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created employees",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Please double check your input parameters"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/employee/{id}": {
      "get": {
        "tags": [
          "crate"
        ],
        "operationId": "get_employee_with_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The employee id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Please double check your input parameters"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "tags": [
          "crate"
        ],
        "operationId": "get_all_employees",
        "responses": {
          "200": {
            "description": "Successfully retrieved employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "required": [
          "id",
          "name",
          "age",
          "gender",
          "phone_no"
        ],
        "properties": {
          "age": {
            "type": "integer",
            "format": "int32",
            "example": 24,
            "minimum": 0
          },
          "gender": {
            "$ref": "#/components/schemas/GenderEnum"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": "The unique ID that represents the employee",
            "minimum": 0
          },
          "name": {
            "type": "string",
            "example": "Bee Cheng"
          },
          "phone_no": {
            "type": "integer",
            "format": "int32",
            "example": "91929394",
            "minimum": 0
          }
        }
      },
      "EmployeeInputParam": {
        "type": "object",
        "required": [
          "name",
          "age",
          "gender",
          "phone_no"
        ],
        "properties": {
          "age": {
            "type": "integer",
            "format": "int32",
            "default": 10,
            "example": 24,
            "minimum": 0
          },
          "gender": {
            "$ref": "#/components/schemas/GenderEnum"
          },
          "name": {
            "type": "string",
            "example": "Tahj Mabo1s"
          },
          "phone_no": {
            "type": "integer",
            "format": "int32",
            "example": "91929394",
            "minimum": 0
          }
        }
      },
      "GenderEnum": {
        "type": "string",
        "enum": [
          "Male",
          "Female",
          "UnidentifiedAnimal"
        ]
      }
    }
  }
}